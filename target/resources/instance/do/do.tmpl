variable "name" {
	default = "{{.Name}}"
}

variable "do_token" {
	default = "{{.Token}}"
}

variable "region" {
	default = "{{.Region}}"
}

variable "size" {
	default = "{{.Size}}"
}

variable "path" {
  default = "{{.Path}}"
}

variable "address" {
  default = "{{.Address}}"
}

variable "pub_key" {
  default = "{{.PubKey}}"
}

variable "pvt_key" {
  default = "{{.PvtKey}}"
}

provider "digitalocean" {
  token = var.do_token
}

resource "digitalocean_ssh_key" "darknode" {
  name       = var.name
  public_key = file(var.pub_key)
}

resource "digitalocean_droplet" "darknode" {
  provider   = digitalocean
  image      = "ubuntu-18-04-x64"
  name       = var.name
  region     = var.region
  size       = var.size
  monitoring = true
  ssh_keys   = [
    digitalocean_ssh_key.darknode.id
  ]

  provisioner "remote-exec" {
    script = "${var.path}/scripts/init.sh"

    connection {
      host        = self.ipv4_address
      type        = "ssh"
      user        = "root"
      private_key = file(var.pvt_key)
    }
  }

  provisioner "file" {
    source = "${var.path}/darknodes/${var.name}/config.json"
    destination = "$HOME/darknode-config.json"

    connection {
      host        = self.ipv4_address
      type        = "ssh"
      user        = "darknode"
      private_key = file(var.pvt_key)
    }
  }

  provisioner "remote-exec" {
    script = "${var.path}/scripts/install.sh"

    connection {
      host        = self.ipv4_address
      type        = "ssh"
      user        = "darknode"
      private_key = file(var.pvt_key)
    }
  }

  provisioner "local-exec" {
    command = "echo /ip4/${digitalocean_droplet.darknode.ipv4_address}/tcp/18514/republic/${var.address} > multiAddress.out"
  }
}

output "multiaddress" {
  value  = "/ip4/${digitalocean_droplet.darknode.ipv4_address}/tcp/18514/republic/${var.address}"
}
