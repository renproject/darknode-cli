name: release
on:
    push:
        tags:
            - '*'
jobs:
    release:
        container: techknowlogick/xgo:latest
        runs-on: ubuntu-latest
        steps:
            - name: Check out code
              uses: actions/checkout@v2
            - name: Configure git for private modules
              env:
                TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
              run: git config --global url."https://tok-kkk:${TOKEN}@github.com".insteadOf "https://github.com"
            - name: Get the version
              uses: olegtarasov/get-tag@v2.1
              id: tagName
            - name: Build the binary
              run: |
                  go build -o darknode_linux_amd64 -ldflags "-s -w -X main.BinaryVersion=${GIT_TAG_NAME}" ./cmd/*.go
                  mv darknode_linux_amd64 ./artifacts/
                  env GOOS=linux CGO_ENABLED=1 CC=aarch64-linux-gnu-gcc-9 CXX=aarch64-linux-gnu-g++-6 GOARCH=arm64 go build -o darknode_linux_arm -ldflags "-s -w -X main.BinaryVersion=${GIT_TAG_NAME}" ./cmd/*.go
                  mv darknode_linux_arm ./artifacts/
                  env GOOS=darwin CGO_ENABLED=1 CC=o64-clang CXX=o64-clang++ GOARCH=amd64 go build -o darknode_darwin_amd64 -ldflags "-s -w -X main.BinaryVersion=${GIT_TAG_NAME}" ./cmd/*.go
                  mv darknode_darwin_amd64 ./artifacts/
                  env GOOS=darwin CGO_ENABLED=1 CC=o64-clang CXX=o64-clang++ GOARCH=arm64 go build -o darknode_darwin_arm64 -ldflags "-s -w -X main.BinaryVersion=${GIT_TAG_NAME}" ./cmd/*.go
                  mv darknode_darwin_arm64 ./artifacts/
            - name: Create Release
              id: create_release
              uses: softprops/action-gh-release@v1
              with:
                  files: |
                      ./artifacts/darknode_darwin_amd64
                      ./artifacts/darknode_darwin_arm64
                      ./artifacts/darknode_linux_amd64
                      ./artifacts/darknode_linux_arm
                      ./artifacts/install.sh
                      ./artifacts/update.sh
            - name: Verify the installation process
              run: |
                  curl https://www.github.com/renproject/darknode-cli/releases/latest/download/install.sh -sSfL | sh
                  export PATH=$PATH:$HOME/.darknode/bin
                  darknode --version