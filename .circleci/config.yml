# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1

orbs:
    core: ren/core@0.0.1
    aws-s3: circleci/aws-s3@1.0.0

_defaults: &defaults
    machine: true
    working_directory: ~/.go_workspace/src/github.com/renproject/darknode-cli
    environment:
        GOPATH: /home/circleci/.go_workspace

commands:
    dep_ensure:
        description: Installing dependencies
        steps:
            - restore_cache:
                  key: gopkg-v1-{{ checksum "Gopkg.lock" }}
                  paths:
                      - ~/.go_workspace/src/github.com/renproject/darknode-cli/vendor
            - core/install_dep
            - run:
                  name: Download dependencies
                  command: |
                      if [ ! -d ~/.go_workspace/src/github.com/renproject/darknode-cli/vendor ]; then
                          dep ensure -v
                      else
                          echo "Dependencies were restored from cache."
                      fi
            - save_cache:
                  key: gopkg-v1-{{ checksum "Gopkg.lock" }}
                  paths:
                      - ~/.go_workspace/src/github.com/renproject/darknode-cli/vendor
    install_xgo:
        description: Installing x-go cross compilation tool
        steps:
            - run:
                name: Building Docker image
                command: |
                    docker pull karalabe/xgo-latest
            - run:
                name: Installing xgo
                command: |
                    mkdir -p $GOPATH/src
                    mkdir -p $GOPATH/bin
                    go get -v github.com/karalabe/xgo

jobs:
    deploy:
        <<: *defaults
        steps:
            - checkout
            - run:
                name: install golang
                command: |
                    wget https://dl.google.com/go/go1.12.2.linux-amd64.tar.gz
                    sudo tar -xf go1.12.2.linux-amd64.tar.gz
                    sudo rm -rf /usr/local/go
                    sudo mv go /usr/local
                    go version
            - dep_ensure
            - install_xgo
            - run:
                name: Build binaries
                command: |
                    xgo --targets=darwin-10.10/amd64 ./cmd
                    xgo --targets=linux/amd64 ./cmd
                    mv cmd-darwin-10.10-amd64 darknode_darwin_amd64
                    mv cmd-linux-amd64 darknode_linux_amd64
            - run:
                name: install AWS CLI
                command: |
                    sudo apt install python-pip python-dev
                    sudo pip install awscli
            - aws-s3/copy:
                from: ~/.go_workspace/src/github.com/renproject/darknode-cli/darknode_linux_amd64
                to: 's3://releases.republicprotocol.com/darknode-cli/darknode_linux_amd64'
                arguments: '--acl public-read'
            - aws-s3/copy:
                from: ~/.go_workspace/src/github.com/renproject/darknode-cli/darknode_darwin_amd64
                to: 's3://releases.republicprotocol.com/darknode-cli/darknode_darwin_amd64'
                arguments: '--acl public-read'

workflows:
    version: 2.1
    build:
        jobs:
            - deploy:
                filters:
                    branches:
                        only: master